{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Card from \"./Card\";\nimport NumberContiner from \"./NumberContiner\";\n\nvar generatebetween = function generatebetween(min, max, exclude) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  var random = Math.floor(Math.random() * (max - min)) + min;\n\n  if (random == exclude) {\n    generatebetween(min, max, exclude);\n  } else {\n    random;\n  }\n};\n\nvar GameScreen = function GameScreen(props) {\n  var _useState = useState(generatebetween(1, 100, props.userChoice)),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  return React.createElement(View, null, React.createElement(Text, null, \"Opponent Guess\"), React.createElement(NumberContiner, null, currentGuess), React.createElement(Card, {\n    style: styles.buttonContainer\n  }, React.createElement(Button, {\n    title: \"LOWER\",\n    onPress: function onPress() {}\n  }), React.createElement(Button, {\n    title: \"HIGHER\",\n    onPress: function onPress() {}\n  })));\n};\n\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginTop: 20,\n    width: 300,\n    maxWidth: \"80%\"\n  }\n});","map":{"version":3,"sources":["/home/developer/Desktop/akash-demo/components/GameScreen.js"],"names":["React","useState","Card","NumberContiner","generatebetween","min","max","exclude","Math","ceil","floor","random","GameScreen","props","userChoice","currentGuess","setCurrentGuess","styles","buttonContainer","StyleSheet","create","screen","flex","flexDirection","justifyContent","marginTop","width","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,cAAP;;AACA,IAAMC,eAAe,GAAC,SAAhBA,eAAgB,CAACC,GAAD,EAAKC,GAAL,EAASC,OAAT,EAAmB;AACzCF,EAAAA,GAAG,GAACG,IAAI,CAACC,IAAL,CAAUJ,GAAV,CAAJ;AACAC,EAAAA,GAAG,GAACE,IAAI,CAACE,KAAL,CAAWJ,GAAX,CAAJ;AACA,MAAMK,MAAM,GAACH,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAeL,GAAG,GAACD,GAAnB,CAAX,IAAoCA,GAAjD;;AACA,MAAGM,MAAM,IAAEJ,OAAX,EACA;AACIH,IAAAA,eAAe,CAACC,GAAD,EAAKC,GAAL,EAASC,OAAT,CAAf;AACH,GAHD,MAII;AACAI,IAAAA,MAAM;AACT;AACA,CAXD;;AAYA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC1B,kBAAwCZ,QAAQ,CAACG,eAAe,CAAC,CAAD,EAAG,GAAH,EAAOS,KAAK,CAACC,UAAb,CAAhB,CAAhD;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AACA,SACG,oBAAC,IAAD,QACP,oBAAC,IAAD,yBADO,EAEP,oBAAC,cAAD,QAAiBD,YAAjB,CAFO,EAGP,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC;AAApB,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE,mBAAI,CAAE;AAArC,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE,mBAAI,CAAE;AAAtC,IAFJ,CAHO,CADH;AAUH,CAZD;;AAcA,eAAeN,UAAf;AACA,IAAMK,MAAM,GAACE,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAC;AACHC,IAAAA,IAAI,EAAC;AADF,GADwB;AAK/BJ,EAAAA,eAAe,EAAC;AACZK,IAAAA,aAAa,EAAC,KADF;AAEZC,IAAAA,cAAc,EAAC,cAFH;AAGZC,IAAAA,SAAS,EAAC,EAHE;AAIZC,IAAAA,KAAK,EAAC,GAJM;AAKZC,IAAAA,QAAQ,EAAC;AALG;AALe,CAAlB,CAAb","sourcesContent":["import React, { useState } from 'react'\nimport { Button, StyleSheet, Text, View } from 'react-native'\nimport Card from './Card'\nimport NumberContiner from './NumberContiner'\nconst generatebetween=(min,max,exclude)=>{\nmin=Math.ceil(min)\nmax=Math.floor(max)\nconst random=Math.floor(Math.random()*(max-min))+min;\nif(random==exclude)\n{\n    generatebetween(min,max,exclude)\n}\nelse{\n    random\n}\n}\nconst GameScreen = (props) => {\n    const [currentGuess, setCurrentGuess] = useState(generatebetween(1,100,props.userChoice))\n    return (\n       <View>\n<Text>Opponent Guess</Text>\n<NumberContiner>{currentGuess}</NumberContiner>\n<Card style={styles.buttonContainer}>\n    <Button title=\"LOWER\" onPress={()=>{}}/>\n    <Button title=\"HIGHER\" onPress={()=>{}}/>\n</Card>\n       </View>\n    )\n}\n\nexport default GameScreen\nconst styles=StyleSheet.create({\nscreen:{\n    flex:1,\n\n},\nbuttonContainer:{\n    flexDirection:\"row\",\n    justifyContent:\"space-around\",\n    marginTop:20,\n    width:300,\n    maxWidth:\"80%\"\n}\n})\n"]},"metadata":{},"sourceType":"module"}