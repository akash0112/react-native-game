{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Card from \"./Card\";\nimport Color from \"./Color\";\nimport Input from \"./Input\";\nimport NumberContiner from \"./NumberContiner\";\n\nvar SmartScreen = function SmartScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmed = _useState4[0],\n      setConfirmed = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectednumber = _useState6[0],\n      setselectedNumber = _useState6[1];\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g, \"\"));\n  };\n\n  var resetInput = function resetInput() {\n    setEnteredValue(\"\");\n    setConfirmed(false);\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var choosenNumber = parseInt(enteredValue);\n\n    if (isNaN(choosenNumber) || choosenNumber <= 0 || choosenNumber > 99) {\n      Alert.alert(\"!Invalid Number\", \"Number has to be Invalid\", [{\n        text: \"Okay\",\n        style: \"destructive\",\n        onPress: resetInput\n      }]);\n      return;\n    }\n\n    setConfirmed(true);\n    setselectedNumber(choosenNumber);\n    setEnteredValue(\"\");\n  };\n\n  var confirmedoutput;\n\n  if (confirmed) {\n    confirmedoutput = React.createElement(Card, {\n      style: styles.card\n    }, React.createElement(Text, null, \"You Selected\"), React.createElement(NumberContiner, null, selectednumber), React.createElement(Button, {\n      title: \"START\"\n    }));\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    }\n  }, React.createElement(View, {\n    style: styles.screen\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"The Game Start\"), React.createElement(Card, {\n    style: styles.inputContainer\n  }, React.createElement(Text, null, \"SELECT A NUMBER\"), React.createElement(Input, {\n    style: styles.input,\n    blurOnSubmit: true,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    keyboardType: \"number-pad\",\n    maxLength: 2,\n    onChangeText: numberInputHandler,\n    value: enteredValue\n  }), React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(View, {\n    style: styles.btn\n  }, React.createElement(Button, {\n    onPress: resetInput,\n    title: \"RESET\",\n    color: Color.primary\n  })), React.createElement(View, {\n    style: styles.btn\n  }, React.createElement(Button, {\n    title: \"SUBMIT\",\n    onPress: confirmInputHandler,\n    color: Color.secondary\n  })))), confirmedoutput));\n};\n\nexport default SmartScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  inputContainer: {\n    width: 300,\n    maxWidth: \"80%\",\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15,\n    width: \"100%\"\n  },\n  title: {\n    marginVertical: 10,\n    fontSize: 20\n  },\n  btn: {\n    width: 70\n  },\n  input: {\n    width: 50,\n    textAlign: \"center\"\n  },\n  card: {\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/home/developer/Desktop/akash-demo/components/SmartScreen.js"],"names":["React","useState","Card","Color","Input","NumberContiner","SmartScreen","enteredValue","setEnteredValue","confirmed","setConfirmed","selectednumber","setselectedNumber","numberInputHandler","inputText","replace","resetInput","confirmInputHandler","choosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","confirmedoutput","styles","card","Keyboard","dismiss","screen","title","inputContainer","input","buttonContainer","btn","primary","secondary","StyleSheet","create","flex","padding","alignItems","width","maxWidth","flexDirection","justifyContent","paddingHorizontal","marginVertical","fontSize","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Keyboard,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableNativeFeedback,\n  TouchableWithoutFeedback,\n  View,\n  Alert,\n} from \"react-native\";\nimport Card from \"./Card\";\nimport Color from \"./Color\";\nimport Input from \"./Input\";\nimport NumberContiner from \"./NumberContiner\";\nconst SmartScreen = () => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [confirmed, setConfirmed] = useState(false);\n  const [selectednumber, setselectedNumber] = useState(\"\");\n  const numberInputHandler = (inputText) => {\n    setEnteredValue(inputText.replace(/[^0-9]/g, \"\"));\n  };\n  const resetInput = () => {\n    setEnteredValue(\"\");\n    setConfirmed(false);\n  };\n  const confirmInputHandler = () => {\n    const choosenNumber = parseInt(enteredValue);\n    if (isNaN(choosenNumber) || choosenNumber <= 0 || choosenNumber > 99) {\n      Alert.alert(\"!Invalid Number\", \"Number has to be Invalid\", [\n        { text: \"Okay\", style: \"destructive\", onPress: resetInput },\n      ]);\n      return;\n    }\n    setConfirmed(true);\n    setselectedNumber(choosenNumber);\n    setEnteredValue(\"\");\n  };\n  let confirmedoutput;\n  if (confirmed) {\n    confirmedoutput = \n    <Card style={styles.card}>\n      <Text>You Selected</Text>\n      {/* <View>\n        <Text>{selectednumber}</Text>\n      </View> */}\n      <NumberContiner>{selectednumber}</NumberContiner>\n      <Button title=\"START\"/>\n    </Card>\n  }\n  return (\n    <TouchableWithoutFeedback\n      onPress={() => {\n        Keyboard.dismiss();\n      }}\n    >\n      <View style={styles.screen}>\n        <Text style={styles.title}>The Game Start</Text>\n        <Card style={styles.inputContainer}>\n          <Text>SELECT A NUMBER</Text>\n          {/* <TextInput /> */}\n          <Input\n            style={styles.input}\n            blurOnSubmit\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            keyboardType=\"number-pad\"\n            maxLength={2}\n            onChangeText={numberInputHandler}\n            value={enteredValue}\n          />\n          <View style={styles.buttonContainer}>\n            <View style={styles.btn}>\n              <Button\n                onPress={resetInput}\n                title=\"RESET\"\n                color={Color.primary}\n              />\n            </View>\n            <View style={styles.btn}>\n              <Button\n                title=\"SUBMIT\"\n                onPress={confirmInputHandler}\n                color={Color.secondary}\n              />\n            </View>\n          </View>\n        </Card>\n        {confirmedoutput}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nexport default SmartScreen;\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\",\n  },\n  inputContainer: {\n    width: 300,\n    maxWidth: \"80%\",\n    alignItems: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15,\n    width: \"100%\",\n  },\n  title: {\n    marginVertical: 10,\n    fontSize: 20,\n  },\n  btn: {\n    width: 70,\n  },\n  input: {\n    width: 50,\n    textAlign: \"center\",\n  },\n  card:{\n    marginTop:10\n  }\n});\n"]},"metadata":{},"sourceType":"module"}